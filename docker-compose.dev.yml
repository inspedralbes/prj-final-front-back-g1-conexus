services:
  tr-final-front:
    image: node:23-bookworm-slim
    command: sh -c "cp .env.DEV .env && npm install && npm run dev"
    volumes:
      - ./front/appMentoria:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 5173:5173
    links:
      - tr-final-back

  tr-final-back:
    build:
      dockerfile: ./back/node/dev.Dockerfile
      context: .
    command: sh -c "cp .env.DEV .env && npm install && cd /usr/src/app/middleware && cp .env.dev .env && npm install && cd /usr/src/app && npm run dev"
    volumes:
      - ./back/node:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 3000:3000
    links:
      - tr-final-mysql
      - tr-final-mongodb
    depends_on:
      - tr-final-mongodb

  service-chat:
    build:
      context: ./back/node/services/chat
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/chat:/usr/src/app
      - ./back/node/middleware:/usr/src/node/middleware
    working_dir: /usr/src/app
    ports:
      - 3001:3001
    depends_on:
      - tr-final-mongodb

  service-community:
    build:
      context: ./back/node/services/community
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/community:/usr/src/app
      - ./back/node/middleware:/usr/src/node/middleware
    working_dir: /usr/src/app
    ports:
      - 3002:3002
    depends_on:
      - tr-final-mongodb
    
  service-employmentexchange:
    build:
      context: ./back/node/services/employmentexchange
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/employmentexchange:/usr/src/app
      - ./back/node/middleware:/usr/src/node/middleware
    working_dir: /usr/src/app
    ports:
      - 3003:3003
    depends_on:
      - tr-final-mongodb

  service-ia-image:
    build:
      context: ./back/node/services/iaimage
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/iaimage:/usr/src/app
      - ./back/node/services/community/upload:/usr/src/node/community/upload
      - ./back/node/services/employmentexchange/upload:/usr/src/node/employmentexchange/upload
    working_dir: /usr/src/app
    ports:
      - 3004:3004

  service-ia-text:
    build:
      context: ./back/node/services/iatext
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/iatext:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 3005:3005
  
  service-notifications:
    build:
      context: ./back/node/services/notifications
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/notifications:/usr/src/app
      - ./back/node/middleware:/usr/src/node/middleware
    working_dir: /usr/src/app
    ports:
      - 3006:3006
    depends_on:
      - tr-final-mongodb

  service-statistics:
    build:
      context: ./back/node/services/statistics
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/statistics:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 3007:3007
  
  service-push-notifications:
    build:
      context: ./back/node/services/pushnotifications
      dockerfile: ../../dev.Dockerfile
    command: sh -c "cp .env.dev .env && npm install && npm run dev"
    volumes:
      - ./back/node/services/pushnotifications:/usr/src/app
      - ./back/node/middleware:/usr/src/node/middleware
    working_dir: /usr/src/app
    ports:
      - 3008:3008
    depends_on:
      - tr-final-mongodb

  # tr-final-microprocessos-api:
  #   build:
  #     dockerfile: ./back/node/dev.Dockerfile
  #     context: .
  #   command: sh -c "cp .env.dev .env && npm install && chmod +x .script.dev.sh && ./.script.dev.sh && cd /usr/src/node/middleware && cp .env.dev .env && npm install && cd /usr/src/app && npm run dev "
  #   volumes:
  #     - ./back/microprocessos_api:/usr/src/app
  #     - ./back/node/services:/usr/src/node/services
  #     - ./back/node/middleware:/usr/src/node/middleware
  #   working_dir: /usr/src/app
  #   ports:
  #     - 3001:3001
  #     - 3002:3002
  #     - 3003:3003
  #     - 3004:3004
  #     - 3005:3005
  #     - 3006:3006
  #     - 3007:3007
  #     - 3008:3008
  #     - 4000:4000
  #   links:
  #     - tr-final-mysql
  #     - tr-final-mongodb
  #   depends_on:
  #     - tr-final-mongodb

  tr-final-mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-db:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@tr-final-mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - tr-final-mongodb

  tr-final-mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mentories
    volumes:
      - mysql-db:/var/lib/mysql:rw
      - ./back/data/create_db.sql:/docker-entrypoint-initdb.d/create.sql
      - ./back/data/insert_db.sql:/docker-entrypoint-initdb.d/inserts.sql
    ports:
      - 3306:3306

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: tr-final-mysql
    depends_on:
      - tr-final-mysql

volumes:
  mysql-db:
  mongo-db: