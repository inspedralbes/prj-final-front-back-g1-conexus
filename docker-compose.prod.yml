version: '3.8'

services:
  front:
    ports:
      - "80:80"
    volumes:
      - ../front/appMentoria/dist:/usr/share/nginx/html
      - ./nginx/front.conf:/etc/nginx/conf.d/default.conf
    networks:
      - conexus-hub-network
    restart: unless-stopped

  back:
    build:
      dockerfile: ./back-node/node/prod.Dockerfile
      context: .
    command: sh -c "cp .env.prod .env && pnpm install && pnpm run dev"
    working_dir: /usr/src/app
    volumes:
      - ../back-node/node:/app
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - mysql
    networks:
      - conexus-hub-network
    restart: unless-stopped

  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - conexus-hub-network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - conexus-hub-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - conexus-hub-network
    restart: unless-stopped

volumes:
  mysql-data:
  portainer_data:


networks:
  conexus-hub-network:
    driver: bridge
