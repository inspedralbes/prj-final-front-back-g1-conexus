services:

  tr-final-back:
    build:
      dockerfile: ./back/node/prod.Dockerfile
      context: .
    command: sh -c "cp .env.prod .env && pnpm install && pnpm run dev"
    volumes:
      - ./back/node:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 3000:3000

  microprocesos_api:
    build:
      dockerfile: ./back/node/prod.Dockerfile
      context: .
    command: sh -c "cp .env.prod .env && pnpm install && chmod 777 .script.prod.sh && ./.script.prod.sh && node server.js"
    volumes:
      - ./back/microprocessos_api:/usr/src/app
      - ./back/node/services:/usr/src/node/services
    working_dir: /usr/src/app
    ports:
      - 3001:3001
      - 3002:3002
      - 3003:3003
      - 3004:3004
      - 3005:3005
      - 3006:3006
      - 3007:3007
      - 3008:3008
      - 3013:24848
    links:
     - tr-final-mysql
     - tr-final-mongodb
  tr-final-mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 0qBqYEid2MN8Qd
    volumes:
      - mongo-db:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 3010:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:0qBqYEid2MN8Qd@tr-final-mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - tr-final-mongodb

  tr-final-mysql:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: P2zjRkH5OqohFI
      MYSQL_DATABASE: mentories
    volumes:
      - mysql-db:/var/lib/mysql:rw
      - ./back/data/create_db.sql:/docker-entrypoint-initdb.d/create.sql
      - ./back/data/insert_db.sql:/docker-entrypoint-initdb.d/inserts.sql
    ports:
      - 3306:3306

  adminer:
    image: adminer
    restart: always
    ports:
      - 3009:8080
    environment:
      ADMINER_DEFAULT_SERVER: tr-final-mysql
    depends_on:
      - tr-final-mysql

volumes:
  mysql-db:
  mongo-db: