version: '3.8'

services:
  conexus-hub-back:
    build:
      context: back-node/node
      dockerfile: prod.Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
      - "3003:3003"
      - "3004:3004"
      - "3005:3005"
      - "3006:3006"
    depends_on:
      conexus-hub-mysql:
        condition: service_healthy
    networks:
      - conexus-hub-network
    restart: always
    # Temporalmente removemos el healthcheck del backend para debug
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  conexus-hub-front:
    build:
      context: ./front-vue
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - "443:443"
      - "80:80"
    networks:
      - conexus-hub-network
    depends_on:
      - conexus-hub-back
    env_file:
      - .env
  conexus-hub-mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${NODE_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=conexus-hub
    volumes:
      - mysql-data:/var/lib/mysql
      - ./back-node/data/create_db.sql:/docker-entrypoint-initdb.d/create.sql
      - ./back-node/data/insert_db.sql:/docker-entrypoint-initdb.d/inserts.sql
    networks:
      - conexus-hub-network
    restart: always
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysql", "-u", "root", "-p${NODE_DB_ROOT_PASSWORD}", "-e", "SELECT 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  conexus-hub-adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: conexus-hub-mysql
    restart: always
    networks:
      - conexus-hub-network
    depends_on:
      - conexus-hub-mysql

volumes:
  mysql-data:


networks:
  conexus-hub-network:
    driver: bridge
