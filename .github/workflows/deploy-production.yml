name: Deploy to Production
run-name: ${{ github.actor }} is deploying to production 🚀

on:
  push:
    branches: [116-refer-producció]

jobs:
  CONEXIO-SERVIDOR:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

      - name: Conect to SHH i actualizaciones
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
            echo "🚀 Iniciando actualizaciones e instalar dependencies..."

            # Actualizar sistema
            sudo apt update && sudo apt upgrade -y

            # Instalar dependencias necesarias
            sudo apt install -y git docker.io docker-compose

            # Asegurar que Docker esté corriendo
            sudo systemctl enable docker
            sudo systemctl start docker

            # Verificar si los archivos docker-compose existen
            if [ ! -f "./docker-compose.nginx.yml" ]; then
              echo "No se encuentra el archivo docker-compose.nginx.yml"
              exit 1
            fi
            if [ ! -f "./docker-compose.prod.yml" ]; then
              echo "No se encuentra el archivo docker-compose.prod.yml"
              exit 1
            fi

            
  DOCKER-COMMANDS:
    needs: [CONEXIO-SERVIDOR]
    runs-on: ubuntu-latest
    steps:
      - name: Obtener variables de entorno
        uses: actions/checkout@v4

      - name: Update docker compose
        run: | 
          echo "Afegir variables d'entorn al .env"
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          # Copiar .env.prod al servidor y renombrarlo .env
          scp -o StrictHostKeyChecking=no -i ~/prod_key.pem .env.prod ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }}:/opt/conexus/.env
          
          # Conectarse por SSH y añadir las variables sensibles
          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} <<EOF
          echo "🔐 Afegint secrets al fitxer .env..."

          echo "MYSQL_USER=${{ secrets.MYSQL_DB_USER }}" >> /opt/conexus/.env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }}" >> /opt/conexus/.env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /opt/conexus/.env
          echo "NODE_SECRET_KEY_TOKEN=${{ secrets.NODE_SECRET_KEY_TOKEN}}" >> /opt/conexus/.env

          echo "✅ .env completat!"
          
          EOF