name: Deploy to Production
run-name: ${{ github.actor }} is deploying to production üöÄ

on:
  push:
    branches: [116-refer-producci√≥]

jobs:
  CONEXIO-SERVIDOR:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

      - name: Conect to SHH i actualizaciones servidor
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
            echo "üöÄ Iniciando actualizaciones e instalar dependencies..."

            # Actualizar sistema
            sudo apt update && sudo apt upgrade -y

            # Asegurar que Docker est√© corriendo
            sudo systemctl enable docker
            sudo systemctl start docker
     
  SECRETS-GITHUB:
    needs: [CONEXIO-SERVIDOR]
    runs-on: ubuntu-latest
    steps:
      - name: Obtener variables de entorno
        uses: actions/checkout@v4

      - name: Update docker compose
        run: | 
          echo "Afegir variables d'entorn al .env"
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          echo "" >> .env.prod

          # Copiar .env.prod al servidor y renombrarlo .env
          scp -o StrictHostKeyChecking=no -i ~/prod_key.pem .env.prod ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }}:/opt/conexus/.env
          
          # Conectarse por SSH y a√±adir las variables sensibles
          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} <<EOF
          echo "üîê Afegint secrets al fitxer .env..."

          echo "MYSQL_USER=${{ secrets.MYSQL_DB_USER }}" >> /opt/conexus/.env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_DB_PASSWORD }}" >> /opt/conexus/.env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /opt/conexus/.env
          echo "NODE_SECRET_KEY_TOKEN=${{ secrets.NODE_SECRET_KEY_TOKEN}}" >> /opt/conexus/.env

          # A√±adir variables del contenedor nginx db
          echo "NGINX_DB_ROOT_PASSWORD=${{ secrets.NGINX_DB_ROOT_PASSWORD }}" >> /opt/conexus/.env
          echo "NGINX_DB_USER=${{ secrets.NGINX_DB_USER }}" >> /opt/conexus/.env
          echo "NGINX_DB_PASSWORD=${{ secrets.NGINX_DB_PASSWORD }}" >> /opt/conexus/.env

          echo "‚úÖ .env completat!"
          
          EOF
  
  START-PORTAINER-NGINX:
    needs: [SECRETS-GITHUB]
    runs-on: ubuntu-latest
    steps:
      - name: Levantar contenedores de Portainer y Nginx
        run: | 
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
          echo "üö¢ Levantando contenedores Docker..."

          cd /opt/conexus

          # Levantar Portainer
          if [ -f docker-compose.portainer.yml ]; then
            echo "üîß Levantando Portainer..."
            docker-compose -f docker-compose.portainer.yml up -d
          fi

          if [ -f docker-compose.nginx.yml ]; then
            echo "üîß Levantando NGINX Proxy Manager..."
            docker-compose -f docker-compose.nginx.yml up -d
          fi

          echo "üéâ Despliegue completado"
          EOF

  BUILD-FRONTEND:
    needs: [CONEXIO-SERVIDOR, SECRETS-GITHUB, START-PORTAINER-NGINX]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Instalar dependencias y construir frontend
        run: |
          cd front-vue
          npm install
          npm run build

      - name: Copiar carpeta dist al servidor remoto
        run: |
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem
          
          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
          cd /opt/conexus 

          if [ -d ./front-vue ]; then 
            sudo rm -r ./front-vue
          fi 
          mkdir front-vue
          
          EOF

          scp -r -o StrictHostKeyChecking=no -i ~/prod_key.pem front-vue/dist/* ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }}:/opt/conexus/front-vue

  BUILD-BACKEND:
    needs: [CONEXIO-SERVIDOR, SECRETS-GITHUB]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copiar carpeta node y data al servidor remoto
        run: | 
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'

          cd /opt/conexus
          if [ -d ./back-node ]; then
            sudo rm -r ./back-node
          fi
          mkdir back-node

          EOF

          scp -r -o StrictHostKeyChecking=no -i ~/prod_key.pem back-node ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }}:/opt/conexus
  
  START-DOCKER-COMPOSE-PRINCIPAL:
    needs: [BUILD-FRONTEND, START-PORTAINER-NGINX]
    runs-on: ubuntu-latest
    steps:
      - name: Conectar a la m√°quina de producci√≥n y levantar contenedores
        run: |
          echo "${{ secrets.PROD_SSH_PRIVATE_KEY }}" > ~/prod_key.pem
          chmod 600 ~/prod_key.pem

          ssh -o StrictHostKeyChecking=no -i ~/prod_key.pem ${{ secrets.PROD_SSH_USERNAME }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
            echo "üö¢ Levantando contenedores Docker..."

            cd /opt/conexus

            if [ -f docker-compose.prod.yml ]; then
              echo "üîß Levantando Backend y Frontend..."

              docker-compose -f docker-compose.prod.yml up -d --build
            else
              echo "‚ùå No se encontr√≥ el archivo docker-compose.prod.yml"
              exit 1
            fi

            echo "üéâ Contenedores levantados con √©xito"
          EOF


